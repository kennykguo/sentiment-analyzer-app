# Generated by Django 4.2.14 on 2024-08-16 22:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SentimentAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField()),
                ('cleaned_review', models.TextField()),
                ('vader_score', models.FloatField()),
                ('model_prediction', models.CharField(max_length=20)),
                ('avg_sentiment_score', models.FloatField()),
                ('avg_word_count', models.FloatField()),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sentiment_analyses', to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='Sentiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField()),
                ('sentiment_score', models.FloatField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentiments', to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='POSTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos', models.CharField(max_length=20)),
                ('word', models.CharField(max_length=100)),
                ('count', models.IntegerField()),
                ('sentiment_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pos_tags', to='api.sentimentanalysis')),
            ],
        ),
        migrations.CreateModel(
            name='NamedEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_text', models.CharField(max_length=255)),
                ('entity_label', models.CharField(max_length=100)),
                ('count', models.IntegerField()),
                ('sentiment_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entities', to='api.sentimentanalysis')),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=255)),
                ('count', models.IntegerField()),
                ('sentiment_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keywords', to='api.sentimentanalysis')),
            ],
        ),
        migrations.CreateModel(
            name='AttentionWord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=100)),
                ('count', models.IntegerField()),
                ('sentiment_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attention_words', to='api.sentimentanalysis')),
            ],
        ),
    ]
